{
  "stats": {
    "suites": 16,
    "tests": 34,
    "passes": 5,
    "pending": 0,
    "failures": 29,
    "start": "2020-08-11T09:48:04.791Z",
    "end": "2020-08-11T09:48:05.290Z",
    "duration": 499
  },
  "tests": [
    {
      "title": "calls alert with each element passed",
      "fullTitle": "index.js each calls alert with each element passed",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected { Spy } to have been called 4 times but got 0",
        "showDiff": true,
        "actual": "0",
        "expected": "4",
        "stack": "AssertionError: expected { Spy } to have been called 4 times but got 0\n    at Context.<anonymous> (test/indexTest.js:19:41)"
      }
    },
    {
      "title": "calls alert properly on object values",
      "fullTitle": "index.js each calls alert properly on object values",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the original collection",
      "fullTitle": "index.js each returns the original collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "successfully returns a correctly populated array",
      "fullTitle": "index.js map successfully returns a correctly populated array",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'length' of undefined\n    at arraysEqual (test/indexTest.js:295:28)\n    at Context.<anonymous> (test/indexTest.js:44:14)",
        "message": "Cannot read property 'length' of undefined"
      }
    },
    {
      "title": "does not modify the original array",
      "fullTitle": "index.js map does not modify the original array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "successfully returns a correctly populated array from modified object values",
      "fullTitle": "index.js map successfully returns a correctly populated array from modified object values",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'length' of undefined\n    at arraysEqual (test/indexTest.js:295:28)\n    at Context.<anonymous> (test/indexTest.js:55:14)",
        "message": "Cannot read property 'length' of undefined"
      }
    },
    {
      "title": "does not modify the original object",
      "fullTitle": "index.js map does not modify the original object",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the correct reduced value when passed an initial value",
      "fullTitle": "index.js reduce returns the correct reduced value when passed an initial value",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected undefined to equal 40",
        "showDiff": true,
        "expected": 40,
        "stack": "AssertionError: expected undefined to equal 40\n    at Context.<anonymous> (test/indexTest.js:69:32)"
      }
    },
    {
      "title": "returns the correct reduced value when not passed an initial value",
      "fullTitle": "index.js reduce returns the correct reduced value when not passed an initial value",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected undefined to equal 28",
        "showDiff": true,
        "expected": 28,
        "stack": "AssertionError: expected undefined to equal 28\n    at Context.<anonymous> (test/indexTest.js:74:32)"
      }
    },
    {
      "title": "does not modify the original array",
      "fullTitle": "index.js reduce does not modify the original array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the value if found",
      "fullTitle": "index.js find returns the value if found",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.find is not a function\n    at Context.<anonymous> (test/indexTest.js:94:17)",
        "message": "fi.find is not a function"
      }
    },
    {
      "title": "does not traverse the whole array if the value is found early",
      "fullTitle": "index.js find does not traverse the whole array if the value is found early",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.find is not a function\n    at Context.<anonymous> (test/indexTest.js:101:10)",
        "message": "fi.find is not a function"
      }
    },
    {
      "title": "returns undefined if the value is not present",
      "fullTitle": "index.js find returns undefined if the value is not present",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.find is not a function\n    at Context.<anonymous> (test/indexTest.js:106:17)",
        "message": "fi.find is not a function"
      }
    },
    {
      "title": "correctly filters for values that the callback evaluates as true",
      "fullTitle": "index.js filter correctly filters for values that the callback evaluates as true",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.filter is not a function\n    at Context.<anonymous> (test/indexTest.js:121:32)",
        "message": "fi.filter is not a function"
      }
    },
    {
      "title": "correctly returns the size of the collection when an array is passed",
      "fullTitle": "index.js size correctly returns the size of the collection when an array is passed",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.size is not a function\n    at Context.<anonymous> (test/indexTest.js:131:17)",
        "message": "fi.size is not a function"
      }
    },
    {
      "title": "correctly returns the size of the collection (amount of keys) when an object is passed",
      "fullTitle": "index.js size correctly returns the size of the collection (amount of keys) when an object is passed",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.size is not a function\n    at Context.<anonymous> (test/indexTest.js:135:17)",
        "message": "fi.size is not a function"
      }
    },
    {
      "title": "returns the first element of the collection",
      "fullTitle": "index.js first returns the first element of the collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.first is not a function\n    at Context.<anonymous> (test/indexTest.js:143:17)",
        "message": "fi.first is not a function"
      }
    },
    {
      "title": "returns the first n elements of the collection when the second optional argument (n) is provided",
      "fullTitle": "index.js first returns the first n elements of the collection when the second optional argument (n) is provided",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.first is not a function\n    at Context.<anonymous> (test/indexTest.js:147:29)",
        "message": "fi.first is not a function"
      }
    },
    {
      "title": "returns the last element of the collection",
      "fullTitle": "index.js last returns the last element of the collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.last is not a function\n    at Context.<anonymous> (test/indexTest.js:155:17)",
        "message": "fi.last is not a function"
      }
    },
    {
      "title": "returns the last n elements of the collection when the second optional argument (n) is provided",
      "fullTitle": "index.js last returns the last n elements of the collection when the second optional argument (n) is provided",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.last is not a function\n    at Context.<anonymous> (test/indexTest.js:159:29)",
        "message": "fi.last is not a function"
      }
    },
    {
      "title": "returns a copy of the **array** with all falsy values removed. In JavaScript, _false_, _null_, _0_, _\"\"_, _undefined_ and _NaN_ are all falsy.",
      "fullTitle": "index.js compact returns a copy of the **array** with all falsy values removed. In JavaScript, _false_, _null_, _0_, _\"\"_, _undefined_ and _NaN_ are all falsy.",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.compact is not a function\n    at Context.<anonymous> (test/indexTest.js:168:29)",
        "message": "fi.compact is not a function"
      }
    },
    {
      "title": "does not modify the original array",
      "fullTitle": "index.js compact does not modify the original array",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.compact is not a function\n    at Context.<anonymous> (test/indexTest.js:172:10)",
        "message": "fi.compact is not a function"
      }
    },
    {
      "title": "correctly sorts arrays of integers and arrays of strings",
      "fullTitle": "index.js sortBy correctly sorts arrays of integers and arrays of strings",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.sortBy is not a function\n    at Context.<anonymous> (test/indexTest.js:200:29)",
        "message": "fi.sortBy is not a function"
      }
    },
    {
      "title": "does not modify the original arrays",
      "fullTitle": "index.js sortBy does not modify the original arrays",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.sortBy is not a function\n    at Context.<anonymous> (test/indexTest.js:205:10)",
        "message": "fi.sortBy is not a function"
      }
    },
    {
      "title": "correctly sorts arrays of integers with non-standard sort",
      "fullTitle": "index.js sortBy correctly sorts arrays of integers with non-standard sort",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.sortBy is not a function\n    at Context.<anonymous> (test/indexTest.js:212:29)",
        "message": "fi.sortBy is not a function"
      }
    },
    {
      "title": "correctly flattens a ludicrously nested array",
      "fullTitle": "index.js flatten correctly flattens a ludicrously nested array",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.flatten is not a function\n    at Context.<anonymous> (test/indexTest.js:221:26)",
        "message": "fi.flatten is not a function"
      }
    },
    {
      "title": "correctly flattens a single level when a second argument of \"true\" is passed",
      "fullTitle": "index.js flatten correctly flattens a single level when a second argument of \"true\" is passed",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.flatten is not a function\n    at Context.<anonymous> (test/indexTest.js:227:26)",
        "message": "fi.flatten is not a function"
      }
    },
    {
      "title": "removes duplicate values from an array",
      "fullTitle": "index.js uniq removes duplicate values from an array",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.uniq is not a function\n    at Context.<anonymous> (test/indexTest.js:239:29)",
        "message": "fi.uniq is not a function"
      }
    },
    {
      "title": "removes duplicate values from an array when an iteratee is applied",
      "fullTitle": "index.js uniq removes duplicate values from an array when an iteratee is applied",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.uniq is not a function\n    at Context.<anonymous> (test/indexTest.js:244:25)",
        "message": "fi.uniq is not a function"
      }
    },
    {
      "title": "retrieves all the names of the object's own enumerable properties",
      "fullTitle": "index.js keys retrieves all the names of the object's own enumerable properties",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.keys is not a function\n    at Context.<anonymous> (test/indexTest.js:255:29)",
        "message": "fi.keys is not a function"
      }
    },
    {
      "title": "does not modify the original object you crazy DOGE!",
      "fullTitle": "index.js keys does not modify the original object you crazy DOGE!",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "retrieves all the values of the object's own properties",
      "fullTitle": "index.js values retrieves all the values of the object's own properties",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.values is not a function\n    at Context.<anonymous> (test/indexTest.js:268:29)",
        "message": "fi.values is not a function"
      }
    },
    {
      "title": "does not modify the original object you crazy DOGE!",
      "fullTitle": "index.js values does not modify the original object you crazy DOGE!",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a sorted collection of the names of every method in an object",
      "fullTitle": "index.js functions returns a sorted collection of the names of every method in an object",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'length' of undefined\n    at arraysEqual (test/indexTest.js:295:12)\n    at Context.<anonymous> (test/indexTest.js:289:14)",
        "message": "Cannot read property 'length' of undefined"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "calls alert with each element passed",
      "fullTitle": "index.js each calls alert with each element passed",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected { Spy } to have been called 4 times but got 0",
        "showDiff": true,
        "actual": "0",
        "expected": "4",
        "stack": "AssertionError: expected { Spy } to have been called 4 times but got 0\n    at Context.<anonymous> (test/indexTest.js:19:41)"
      }
    },
    {
      "title": "calls alert properly on object values",
      "fullTitle": "index.js each calls alert properly on object values",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the original collection",
      "fullTitle": "index.js each returns the original collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "successfully returns a correctly populated array",
      "fullTitle": "index.js map successfully returns a correctly populated array",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'length' of undefined\n    at arraysEqual (test/indexTest.js:295:28)\n    at Context.<anonymous> (test/indexTest.js:44:14)",
        "message": "Cannot read property 'length' of undefined"
      }
    },
    {
      "title": "successfully returns a correctly populated array from modified object values",
      "fullTitle": "index.js map successfully returns a correctly populated array from modified object values",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'length' of undefined\n    at arraysEqual (test/indexTest.js:295:28)\n    at Context.<anonymous> (test/indexTest.js:55:14)",
        "message": "Cannot read property 'length' of undefined"
      }
    },
    {
      "title": "returns the correct reduced value when passed an initial value",
      "fullTitle": "index.js reduce returns the correct reduced value when passed an initial value",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected undefined to equal 40",
        "showDiff": true,
        "expected": 40,
        "stack": "AssertionError: expected undefined to equal 40\n    at Context.<anonymous> (test/indexTest.js:69:32)"
      }
    },
    {
      "title": "returns the correct reduced value when not passed an initial value",
      "fullTitle": "index.js reduce returns the correct reduced value when not passed an initial value",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected undefined to equal 28",
        "showDiff": true,
        "expected": 28,
        "stack": "AssertionError: expected undefined to equal 28\n    at Context.<anonymous> (test/indexTest.js:74:32)"
      }
    },
    {
      "title": "returns the value if found",
      "fullTitle": "index.js find returns the value if found",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.find is not a function\n    at Context.<anonymous> (test/indexTest.js:94:17)",
        "message": "fi.find is not a function"
      }
    },
    {
      "title": "does not traverse the whole array if the value is found early",
      "fullTitle": "index.js find does not traverse the whole array if the value is found early",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.find is not a function\n    at Context.<anonymous> (test/indexTest.js:101:10)",
        "message": "fi.find is not a function"
      }
    },
    {
      "title": "returns undefined if the value is not present",
      "fullTitle": "index.js find returns undefined if the value is not present",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.find is not a function\n    at Context.<anonymous> (test/indexTest.js:106:17)",
        "message": "fi.find is not a function"
      }
    },
    {
      "title": "correctly filters for values that the callback evaluates as true",
      "fullTitle": "index.js filter correctly filters for values that the callback evaluates as true",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.filter is not a function\n    at Context.<anonymous> (test/indexTest.js:121:32)",
        "message": "fi.filter is not a function"
      }
    },
    {
      "title": "correctly returns the size of the collection when an array is passed",
      "fullTitle": "index.js size correctly returns the size of the collection when an array is passed",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.size is not a function\n    at Context.<anonymous> (test/indexTest.js:131:17)",
        "message": "fi.size is not a function"
      }
    },
    {
      "title": "correctly returns the size of the collection (amount of keys) when an object is passed",
      "fullTitle": "index.js size correctly returns the size of the collection (amount of keys) when an object is passed",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.size is not a function\n    at Context.<anonymous> (test/indexTest.js:135:17)",
        "message": "fi.size is not a function"
      }
    },
    {
      "title": "returns the first element of the collection",
      "fullTitle": "index.js first returns the first element of the collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.first is not a function\n    at Context.<anonymous> (test/indexTest.js:143:17)",
        "message": "fi.first is not a function"
      }
    },
    {
      "title": "returns the first n elements of the collection when the second optional argument (n) is provided",
      "fullTitle": "index.js first returns the first n elements of the collection when the second optional argument (n) is provided",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.first is not a function\n    at Context.<anonymous> (test/indexTest.js:147:29)",
        "message": "fi.first is not a function"
      }
    },
    {
      "title": "returns the last element of the collection",
      "fullTitle": "index.js last returns the last element of the collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.last is not a function\n    at Context.<anonymous> (test/indexTest.js:155:17)",
        "message": "fi.last is not a function"
      }
    },
    {
      "title": "returns the last n elements of the collection when the second optional argument (n) is provided",
      "fullTitle": "index.js last returns the last n elements of the collection when the second optional argument (n) is provided",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.last is not a function\n    at Context.<anonymous> (test/indexTest.js:159:29)",
        "message": "fi.last is not a function"
      }
    },
    {
      "title": "returns a copy of the **array** with all falsy values removed. In JavaScript, _false_, _null_, _0_, _\"\"_, _undefined_ and _NaN_ are all falsy.",
      "fullTitle": "index.js compact returns a copy of the **array** with all falsy values removed. In JavaScript, _false_, _null_, _0_, _\"\"_, _undefined_ and _NaN_ are all falsy.",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.compact is not a function\n    at Context.<anonymous> (test/indexTest.js:168:29)",
        "message": "fi.compact is not a function"
      }
    },
    {
      "title": "does not modify the original array",
      "fullTitle": "index.js compact does not modify the original array",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.compact is not a function\n    at Context.<anonymous> (test/indexTest.js:172:10)",
        "message": "fi.compact is not a function"
      }
    },
    {
      "title": "correctly sorts arrays of integers and arrays of strings",
      "fullTitle": "index.js sortBy correctly sorts arrays of integers and arrays of strings",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.sortBy is not a function\n    at Context.<anonymous> (test/indexTest.js:200:29)",
        "message": "fi.sortBy is not a function"
      }
    },
    {
      "title": "does not modify the original arrays",
      "fullTitle": "index.js sortBy does not modify the original arrays",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.sortBy is not a function\n    at Context.<anonymous> (test/indexTest.js:205:10)",
        "message": "fi.sortBy is not a function"
      }
    },
    {
      "title": "correctly sorts arrays of integers with non-standard sort",
      "fullTitle": "index.js sortBy correctly sorts arrays of integers with non-standard sort",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.sortBy is not a function\n    at Context.<anonymous> (test/indexTest.js:212:29)",
        "message": "fi.sortBy is not a function"
      }
    },
    {
      "title": "correctly flattens a ludicrously nested array",
      "fullTitle": "index.js flatten correctly flattens a ludicrously nested array",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.flatten is not a function\n    at Context.<anonymous> (test/indexTest.js:221:26)",
        "message": "fi.flatten is not a function"
      }
    },
    {
      "title": "correctly flattens a single level when a second argument of \"true\" is passed",
      "fullTitle": "index.js flatten correctly flattens a single level when a second argument of \"true\" is passed",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.flatten is not a function\n    at Context.<anonymous> (test/indexTest.js:227:26)",
        "message": "fi.flatten is not a function"
      }
    },
    {
      "title": "removes duplicate values from an array",
      "fullTitle": "index.js uniq removes duplicate values from an array",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.uniq is not a function\n    at Context.<anonymous> (test/indexTest.js:239:29)",
        "message": "fi.uniq is not a function"
      }
    },
    {
      "title": "removes duplicate values from an array when an iteratee is applied",
      "fullTitle": "index.js uniq removes duplicate values from an array when an iteratee is applied",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.uniq is not a function\n    at Context.<anonymous> (test/indexTest.js:244:25)",
        "message": "fi.uniq is not a function"
      }
    },
    {
      "title": "retrieves all the names of the object's own enumerable properties",
      "fullTitle": "index.js keys retrieves all the names of the object's own enumerable properties",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.keys is not a function\n    at Context.<anonymous> (test/indexTest.js:255:29)",
        "message": "fi.keys is not a function"
      }
    },
    {
      "title": "retrieves all the values of the object's own properties",
      "fullTitle": "index.js values retrieves all the values of the object's own properties",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: fi.values is not a function\n    at Context.<anonymous> (test/indexTest.js:268:29)",
        "message": "fi.values is not a function"
      }
    },
    {
      "title": "returns a sorted collection of the names of every method in an object",
      "fullTitle": "index.js functions returns a sorted collection of the names of every method in an object",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'length' of undefined\n    at arraysEqual (test/indexTest.js:295:12)\n    at Context.<anonymous> (test/indexTest.js:289:14)",
        "message": "Cannot read property 'length' of undefined"
      }
    }
  ],
  "passes": [
    {
      "title": "does not modify the original array",
      "fullTitle": "index.js map does not modify the original array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not modify the original object",
      "fullTitle": "index.js map does not modify the original object",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not modify the original array",
      "fullTitle": "index.js reduce does not modify the original array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not modify the original object you crazy DOGE!",
      "fullTitle": "index.js keys does not modify the original object you crazy DOGE!",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not modify the original object you crazy DOGE!",
      "fullTitle": "index.js values does not modify the original object you crazy DOGE!",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}